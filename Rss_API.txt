const rssURL1= "https://rss.app/feeds/cYVBYcpUEbgXfg9v.xml"

const rssURL2= "http://fetchrss.com/rss/64e9f141d357a56b6f441b7364e9f238c5dc7e32b05c9672.xml";
// This link is not created by you, so you are subject to CORS Access control, you can use this link to test cors for debugging example.

const rssURL3= "http://something.invalide.rss";

const jsonURL = "https://www.toptal.com/developers/feed2json/convert?url=";

            //The second API is used to convert XML to JSON online, for example:

const rssURL2 = "https://www.toptal.com/developers/feed2json/convert?url=http://fetchrss.com/rss/64e9f141d357a56b6f441b7364e9f238c5dc7e32b05c9672.xml" 
---------------------------------------------------------------RSS APIs 


How to refer to JSON items: 
obj.items[1].summary


------------------------------------Online coding playground: 


https://codepen.io/tunk/pen/nrXmNJ

https://playcode.io/157***

---------------------------------------------------------------Simple fetch example

    function getData(rssURL2) {

	// var name       = document.getElementById("name").value;
        // name inputs
        // var requestUrl = URL + name;

	    fetch(rssURL2, {
		method: GET,
  		mode: no-cors,
		})
           
	        .then(response => response.json())
   		.then(data => {
                 console.log(typeof data);

                //From the step onward, you need to get the information of interest of the RSS feed
		//Here we assume that "data" is a usable JSON object

		if(data.version) {
   	                document.getElementById("p").innerHTML = data.items[0].summary;
                }
                else { 
	                document.getElementById("p").innerHTML = "Sorry, no response";
                }
	        })
	        .catch(function (error) {
	            console.log('Request failed', error);
	        });
    };

---------------------------------------------------- XML parsing example, in addtion to your Learning resources. 
   const rssFeedContainer = document.getElementById('rssFeed');  

fetch(rssURL)
.then(response => response.text())
//response is, in most APIs' cases, a promise;
.then(str=> {
//Now you have a long string, with all charaters of the RSS Feed, with all tags etc. It is not quite readable. 

/*
 var response = await fetch(rssURL);
 var str = response.text);
*/

 		const parser = new DOMParser();  

                const xmlDoc = parser.parseFromString(str, 'text/xml');  
// now you load the string into an XML structure. 

                const items = xmlDoc.querySelectorAll('item');  
//through this query you choose all items, and load it into an array.          

	items.forEach(item => {  
         
         // Foreach is used for array iteration: Syntext: array.forEach(function(currentValue, index, arr), thisValue)
 

                    const title = item.querySelector('title').textContent;  

                    const link = item.querySelector('link').textContent;  

                    const description = item.querySelector('description').textContent;  

                    const feedItem = document.createElement('div');  


------------------------------------------

 <h1>Contact Us</h1>​

    <form id="contactForm">​

        <label for="age">Age:</label>​

        <input type="number" id="age" name="age" required autocomplete="on" value="Your age"><br><br>​

        <label for="email">Email:</label>​

        <input type="email" id="email" name="email" required><br><br>​

        <button type="submit">Send Email</button>​

    </form>
<script> 
       var bt = document.getElementByName("submit");
       bt.addEventListener("click", {
       var email =  document.getElementByID("email").value;
       var age = document.getElementByID("age").value;
       if(age>200||age<=0)
          {alert("Data entry invalide");
})

</script>
